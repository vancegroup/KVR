<Window x:Class="KinectWithVRServer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:src="KinectWithVRServer.TextBoxBehavour"
        xmlns:System="clr-namespace:System;assembly=mscorlib"
        xmlns:Collections="clr-namespace:System.Collections;assembly=mscorlib"
        xmlns:local="clr-namespace:KinectWithVRServer"
        xmlns:kBase="clr-namespace:KinectBase;assembly=KinectBase"
        xmlns:core="clr-namespace:System;assembly=mscorlib"
        Initialized="Window_Initialized" Closing="Window_Closing"
        Title="Kinect with VR (KVR) Server" Height="530" Width="700">
    <Window.Resources>
        <ObjectDataProvider x:Key="ButtonTypeEnum" MethodName="GetValues" ObjectType="{x:Type core:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type Type="kBase:ButtonType"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="PressStateEnum" MethodName="GetValues" ObjectType="{x:Type core:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type Type="kBase:PressState"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <local:BoolToPressConverter x:Key="boolToPressConverter"/>
        <local:ConnectionStateToBoolConverter x:Key="connectionStatusToBoolConverter"/>
        <local:ConnectionStateToInverseBoolConverter x:Key="connectionStatusToInverseBoolConverter"/>
        <local:ConnectionStateToTextDecorationsConverter x:Key="connectionStateToTextDecorationsConverter"/>
        <local:ConnectionStateToBrushConverter x:Key="connectionStateToBrushConverter"/>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="2*"/>
            <RowDefinition Height="3*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Menu IsMainMenu="True">
            <MenuItem Header="File">
                <MenuItem Name="OpenSettingsMenuItem" Header="_Open Settings" Click="OpenSettingsMenuItem_Click"/>
                <MenuItem Name="SaveSettingsMenuItem" Header="_Save Settings" Click="SaveSettingsMenuItem_Click"/>
                <Separator/>
                <MenuItem Name="SaveLogMenuItem" Header="Save Log" Click="SaveLogMenuItem_Click"/>
                <Separator/>
                <MenuItem Name="ExitMenuItem" Header="Exit" Click="ExitMenuItem_Click"/>
            </MenuItem>
            <MenuItem Header="Help">
                <MenuItem Name="AboutMenuItem" Header="About" Click="AboutMenuItem_Click"/>
                <MenuItem Name="HelpMenuItem" Header="Help" Click="HelpMenuItem_Click"/>
            </MenuItem>
        </Menu>

        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <!--<RowDefinition Height="Auto"/>-->
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Label Content="Color:"/>
                <ComboBox Name="ColorSourcePickerComboBox" SelectionChanged="ColorSourcePickerComboBox_SelectionChanged" Grid.Column="1" Margin="2" SelectedIndex="0">
                    <ComboBoxItem Content="None"/>
                </ComboBox>
            </Grid>
            <StackPanel Grid.Row="1" Orientation="Horizontal">
                <TextBlock Text="            "/>
                <RadioButton Name="colorKinectSkeletonsRadioButton" Content="Kinect Skeletons" IsChecked="True" Margin="2" IsEnabled="False" Click="colorSkeletonsRadioButton_Click"/>
                <RadioButton Name="colorMergedSkeletonsRadioButton" Content="Merged Skeletons" IsChecked="False" Margin="2" IsEnabled="False"  Click="colorSkeletonsRadioButton_Click"/>
            </StackPanel>
            <Image Name="ColorImage" Grid.Row="2" Margin="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Stretch="Uniform"/>
            <Canvas Name="ColorImageCanvas" Grid.Row="2" Margin="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Transparent"/>
            <Grid Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Label Content="Depth:"/>
                <ComboBox Name="DepthSourcePickerComboBox" SelectionChanged="DepthSourcePickerComboBox_SelectionChanged" Grid.Column="1" Margin="2" SelectedIndex="0">
                    <ComboBoxItem Content="None"/>
                </ComboBox>
            </Grid>
            <StackPanel Grid.Row="1" Grid.Column="1" Orientation="Horizontal">
                <TextBlock Text="             "/>
                <RadioButton Name="depthKinectSkeletonsRadioButton" Content="Kinect Skeletons" IsChecked="True" Margin="2" IsEnabled="False"  Click="depthSkeletonsRadioButton_Click"/>
                <RadioButton Name="depthMergedSkeletonsRadioButton" Content="Merged Skeletons" IsChecked="False" Margin="2" IsEnabled="False"  Click="depthSkeletonsRadioButton_Click"/>
            </StackPanel>
            <Image Name="DepthImage" Grid.Row="2" Grid.Column="1" Margin="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
            <Canvas Name="DepthImageCanvas" Grid.Row="2" Grid.Column="1" Margin="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Transparent"/>
        </Grid>
        <GridSplitter Grid.Row="1" VerticalAlignment="Bottom" Height="5" ResizeDirection="Rows" HorizontalAlignment="Stretch" Background="Transparent"/>
        <GridSplitter Grid.Row="2" VerticalAlignment="Top" Height="5" ResizeDirection="Rows" HorizontalAlignment="Stretch" Background="Transparent"/>

        <TabControl Name="SettingsTabControl" Grid.Row="2" SelectedIndex="0" SelectionChanged="SettingsTabControl_SelectionChanged">
            <TabItem Name="StatusTab" Header="Status">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <StackPanel Grid.Row="0" Orientation="Vertical" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="2" >
                            <TextBlock Text="Server Status: "/>
                            <TextBlock Name="ServerStatusTextBlock" Text="Stopped" FontWeight="Bold"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="2" >
                            <TextBlock Text="Depth Frame Rate: "/>
                            <TextBlock Name="DepthFPSTextBlock" Text="0.0"/>
                            <TextBlock Text=" FPS"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="2" >
                            <TextBlock Text="Color Frame Rate: "/>
                            <TextBlock Name="ColorFPSTextBlock" Text="0.0"/>
                            <TextBlock Text=" FPS"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="2" >
                            <TextBlock Text="Tracked Skeletons: "/>
                            <TextBlock Name="TrackedSkeletonsTextBlock" Text="0"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="2" >
                            <TextBlock Text="Server Run Time: "/>
                            <TextBlock Name="RunTimeTextBlock" Text="0"/>
                        </StackPanel>
                    </StackPanel> 
                    <StackPanel Grid.Row="1" FlowDirection="RightToLeft" Orientation="Horizontal" VerticalAlignment="Center">
                        <Button Content="Start" Height="23" Name="startServerButton" Width="100" Margin="2" Click="startServerButton_Click"/>
                    </StackPanel>
                </Grid>
            </TabItem>
            
            <TabItem Name="KinectTab" Header="Kinect Settings">
                <Grid Name="KinectTabMasterGrid">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="100"/>
                        <ColumnDefinition Width="4"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <ListBox Name="kinectTabListBox" SelectionChanged="kinectTabListBox_SelectionChanged"/>
                    <GridSplitter Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Transparent" ResizeDirection="Columns"/>
                    <Grid Name="avaliableKinectsLayoutGrid" Grid.Column="2">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <DataGrid Name="kinectsAvailableDataGrid" AutoGenerateColumns="False" ItemsSource="{Binding}" HeadersVisibility="Column" CanUserAddRows="False" SelectionChanged="kinectsAvailableDataGrid_SelectionChanged">
                            <DataGrid.Columns>
                                <DataGridTemplateColumn Header="Use Kinect">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <CheckBox IsChecked="{Binding Path=UseKinect, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding Path=Status, Converter={StaticResource connectionStatusToBoolConverter}}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTextColumn Header="Kinect Number" IsReadOnly="True" Binding="{Binding Path=KinectID, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <DataGridTextColumn Header="Kinect Status" IsReadOnly="True" Binding="{Binding Path=ServerStatus, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <DataGridTemplateColumn Header="Connection Status" IsReadOnly="True">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock>
                                                <Hyperlink Click="Hyperlink_Click" TextDecorations="{Binding Path=Status, Converter={StaticResource connectionStateToTextDecorationsConverter}}">
                                                    <TextBlock Text="{Binding Path=Status}" IsEnabled="{Binding Path=Status, Converter={StaticResource connectionStatusToInverseBoolConverter}}" Foreground="{Binding Path=Status, Converter={StaticResource connectionStateToBrushConverter}}" />
                                                </Hyperlink>
                                            </TextBlock>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTextColumn Header="Kinect Type" IsReadOnly="True" Binding="{Binding KinectTypeString}"/>
                                <DataGridTextColumn Header="Unique ID" IsReadOnly="True" Binding="{Binding UniqueID}"/>
                                <!--<DataGridTextColumn Header="Connection ID" IsReadOnly="True" Binding="{Binding ConnectionID}"/>-->
                            </DataGrid.Columns>
                        </DataGrid>
                        <StackPanel Name="nkStackPanel" Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Right">
                            <TextBlock Text="Network Kinects:" VerticalAlignment="Center" Margin="2"/>
                            <Button Name="AddNKButton" Content="Add" Margin="2" Width="50" Click="AddNKButton_Click"/>
                            <Button Name="RemoveNKButton" Content="Remove" Margin="2" Width="50" IsEnabled="False" Click="RemoveNKButton_Click"/>
                        </StackPanel>
                    </Grid>
                </Grid>
            </TabItem>
                
            <TabItem Name="VoiceTab" Header="Voice Commands">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <StackPanel Orientation="Horizontal" Grid.ColumnSpan="2">
                        <TextBlock  HorizontalAlignment="Left" VerticalAlignment="Center" Text="Audio Source:" Margin="2"/>
                        <ComboBox Name="VoiceKinectComboBox" Margin="2" Height="23" Width="110" SelectionChanged="VoiceKinectComboBox_SelectionChanged">
                            <ComboBoxItem Content="System Default"/>
                        </ComboBox>
                        <TextBlock Text="Recognition Engine:" Margin="20,2,2,2" VerticalAlignment="Center"/>
                        <ComboBox Name="VoiceRecognitionEngineComboBox" Margin="2" SelectedIndex="0" Height="23" Width="350" SelectionChanged="VoiceRecognitionEngineComboBox_SelectionChanged">
                        </ComboBox>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Grid.Row="1" >
                        <TextBlock Text="VRPN Button" FontWeight="Bold" VerticalAlignment="Center" Margin="0,0,0,0">
                            <TextBlock.LayoutTransform>
                                <RotateTransform Angle="-90"/>
                            </TextBlock.LayoutTransform>
                        </TextBlock>
                        <TextBlock Text="Commands" FontWeight="Bold" VerticalAlignment="Center" Margin="0,0,0,0">
                            <TextBlock.LayoutTransform>
                                <RotateTransform Angle="-90"/>
                            </TextBlock.LayoutTransform>
                        </TextBlock>
                    </StackPanel>
                    <DataGrid Name="VoiceButtonDataGrid" Grid.Row="1" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" AutoGenerateColumns="False" HeadersVisibility="Column" ItemsSource="{Binding}" LostFocus="VoiceButtonDataGrid_LostFocus">
                        <DataGrid.Columns>
                            <DataGridComboBoxColumn Header="Button Type" SelectedItemBinding="{Binding buttonType}" ItemsSource="{Binding Source={StaticResource ButtonTypeEnum}}"/>
                            <DataGridTextColumn Header="Button #" Binding="{Binding buttonNumber}"/>                            
                            <!--<DataGridComboBoxColumn Header="Initial State" SelectedItemBinding="{Binding initialState, Converter={StaticResource boolToPressConverter}}" ItemsSource="{Binding Source={StaticResource PressStateEnum}}"/>-->
                            <DataGridComboBoxColumn Header="Set State" SelectedItemBinding="{Binding setState, Converter={StaticResource boolToPressConverter}}" ItemsSource="{Binding Source={StaticResource PressStateEnum}}"/>
                            <DataGridTextColumn Header="Confidence" Binding="{Binding confidence}"/>
                            <!--<DataGridCheckBoxColumn Header="Send Source Angle" Binding="{Binding sendSourceAngle}"/>-->
                            <DataGridTextColumn Header="Recognized Word" Binding="{Binding recognizedWord}"/>
                            <DataGridTextColumn Header="Server Name" Binding="{Binding serverName}"/>
                            <DataGridTextColumn Header="Comments" Binding="{Binding comments}"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <StackPanel Orientation="Horizontal" Grid.Row="2" >
                        <TextBlock Text="VRPN Text" FontWeight="Bold" VerticalAlignment="Center" Margin="0,0,0,0">
                            <TextBlock.LayoutTransform>
                                <RotateTransform Angle="-90"/>
                            </TextBlock.LayoutTransform>
                        </TextBlock>
                        <TextBlock Text="Commands" FontWeight="Bold" VerticalAlignment="Center" Margin="0,0,0,0">
                            <TextBlock.LayoutTransform>
                                <RotateTransform Angle="-90"/>
                            </TextBlock.LayoutTransform>
                        </TextBlock>
                    </StackPanel>
                    <DataGrid Name="VoiceTextDataGrid" Grid.Row="2" Grid.Column="1" AutoGenerateColumns="False" HeadersVisibility="Column" ItemsSource="{Binding}" LostFocus="VoiceTextDataGrid_LostFocus">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Action Text" Binding="{Binding actionText}"/>
                            <DataGridTextColumn Header="Confidence" Binding="{Binding confidence}"/>
                            <!--<DataGridCheckBoxColumn Header="Send Source Angle" Binding="{Binding sendSourceAngle}"/>-->
                            <DataGridTextColumn Header="Recognized Word" Binding="{Binding recognizedWord}"/>
                            <DataGridTextColumn Header="Server Name" Binding="{Binding serverName}"/>
                            <DataGridTextColumn Header="Comments" Binding="{Binding comments}"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </TabItem>
            
            <!--The gesture tab is disabled until such time as gestures are put into the server-->
            <TabItem Name="GestureTab" Header="Gesture Commands">
                <Grid Name="GestureTabMasterGrid">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="100"/>
                        <ColumnDefinition Width="4"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <ListBox Name="gestureTabListBox" SelectionChanged="gestureTabListBox_SelectionChanged"/>
                    <GridSplitter Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Transparent" ResizeDirection="Columns"/>
                    <Grid Name="gesturesLayoutGrid" Grid.Column="2">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <DataGrid Name="currentGesturesDataGrid" AutoGenerateColumns="False" ItemsSource="{Binding}" HeadersVisibility="Column" CanUserAddRows="False" SelectionChanged="currentGesturesDataGrid_SelectionChanged">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Name" IsReadOnly="True" Binding="{Binding Path=gestureName, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <DataGridCheckBoxColumn Header="Trained" IsReadOnly="True" Binding="{Binding Path=isTrained, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <DataGridTextColumn Header="Sensitivity" IsReadOnly="True" Binding="{Binding Path=sensitivity, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <DataGridTextColumn Header="Joint" IsReadOnly="True" Binding="{Binding Path=moniteredJoint, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <DataGridTextColumn Header="Skeleton" IsReadOnly="True" Binding="{Binding Path=trackedSkeleton, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <DataGridTextColumn Header="Server Name" IsReadOnly="False" Binding="{Binding Path=serverName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <DataGridComboBoxColumn Header="Button Type" SelectedItemBinding="{Binding buttonType, Mode=TwoWay}" ItemsSource="{Binding Source={StaticResource ButtonTypeEnum}}"/>
                                <DataGridTextColumn Header="Button #" IsReadOnly="False" Binding="{Binding Path=buttonNumber, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <DataGridComboBoxColumn Header="Set State" SelectedItemBinding="{Binding setState, Converter={StaticResource boolToPressConverter}}" ItemsSource="{Binding Source={StaticResource PressStateEnum}}"/>
                                <DataGridTextColumn Header="Comments" Binding="{Binding Path=comments, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </DataGrid.Columns>
                        </DataGrid>
                        <StackPanel Name="addGestureStackPanel" Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Right">
                            <TextBlock Text="Gestures:" VerticalAlignment="Center" Margin="2"/>
                            <Button Name="AddGestureButton" Content="Add" Margin="2" Width="50" Click="AddGestureButton_Click"/>
                            <Button Name="RemoveGestureButton" Content="Remove" Margin="2" Width="50" IsEnabled="False" Click="RemoveGestureButton_Click"/>
                        </StackPanel>
                    </Grid>
                </Grid>
            </TabItem>
            
            <TabItem Name="SkeletonTab" Header="Skeleton Settings" RequestBringIntoView="SkeletonTab_RequestBringIntoView">
                <TabControl Name="SkeletonsTabControl" TabStripPlacement="Bottom">
                    <TabItem Name="MergedSkeletonTab" Header="Merged Skeletons">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <StackPanel Orientation="Horizontal" Height="27">
                                <!--<CheckBox Content="Seated Mode" Margin="2" Name="ChooseSeatedCheckBox" VerticalAlignment="Center" Checked="ChooseSeatedCheckBox_CheckChanged" Unchecked="ChooseSeatedCheckBox_CheckChanged"/>-->
                                <TextBlock Text="Skeleton Sort Mode:" Margin="2,2,2,2" VerticalAlignment="Center"/>
                                <ComboBox Margin="2" Name="SkelSortModeComboBox" SelectionChanged="SkelSortModeComboBox_SelectionChanged" Width="250">
                                    <ComboBoxItem Content="None"/>
                                    <ComboBoxItem Content="Ascending X-Distance from Origin"/>
                                    <ComboBoxItem Content="Descending X-Distance from Origin"/>
                                    <ComboBoxItem Content="Ascending Y-Distance from Origin"/>
                                    <ComboBoxItem Content="Descending Y-Distance from Origin"/>
                                    <ComboBoxItem Content="Ascending Z-Distance from Origin"/>
                                    <ComboBoxItem Content="Descending Z-Distance from Origin"/>
                                    <ComboBoxItem Content="Ascending Euclidean Distance from Origin"/>
                                    <ComboBoxItem Content="Descending Euclidean Distance from Origin"/>
                                    <ComboBoxItem Content="Ascending X-Distance from Feedback Sensor"/>
                                    <ComboBoxItem Content="Descending X-Distance from Feedback Sensor"/>
                                    <ComboBoxItem Content="Ascending Y-Distance from Feedback Sensor"/>
                                    <ComboBoxItem Content="Descending Y-Distance from Feedback Sensor"/>
                                    <ComboBoxItem Content="Ascending Z-Distance from Feedback Sensor"/>
                                    <ComboBoxItem Content="Descending Z-Distance from Feedback Sensor"/>
                                    <ComboBoxItem Content="Ascending Euclidean Distance from Feedback Sensor"/>
                                    <ComboBoxItem Content="Descending Euclidean Distance from Feedback Sensor"/>
                                </ComboBox>
                                <TextBlock Text="Predict Ahead (ms):" Margin="2" VerticalAlignment="Center"/>
                                <TextBox Name="skeletonPredictAheadTextBox" Text="0" Width="32" Margin="2" VerticalAlignment="Center" TextAlignment="Right" PreviewKeyDown="floatNumberTextBox_PreviewKeyDown" LostFocus="skeletonPredictAheadTextBox_LostFocus"/>
                            </StackPanel>
                            <DataGrid Name="SkeletonSettingsDataGrid" Grid.Row="3" AutoGenerateColumns="False" ItemsSource="{Binding}" HeadersVisibility="Column" CanUserAddRows="False">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="#" IsReadOnly="True" Binding="{Binding Path=skeletonNumber}"/>
                                    <DataGridCheckBoxColumn Header="Transmit" IsReadOnly="False" Binding="{Binding Path=useSkeleton}"/>
                                    <DataGridTextColumn Header="Server Name" IsReadOnly="False" Binding="{Binding Path=serverName}"/>
                                    <DataGridTextColumn Header="Render Color" IsReadOnly="True" Binding="{Binding Path=renderColor}"/>
                                    <DataGridCheckBoxColumn Header="Use RH Grip" IsReadOnly="False" Binding="{Binding Path=useRightHandGrip}"/>
                                    <DataGridTextColumn Header="RH Server Name" IsReadOnly="False" Binding="{Binding Path=rightGripServerName}"/>
                                    <DataGridTextColumn Header="RH Button #" IsReadOnly="False" Binding="{Binding Path=rightGripButtonNumber}"/>
                                    <DataGridCheckBoxColumn Header="Use LH Grip" IsReadOnly="False" Binding="{Binding Path=useLeftHandGrip}"/>
                                    <DataGridTextColumn Header="LH Server Name" IsReadOnly="False" Binding="{Binding Path=leftGripServerName}"/>
                                    <DataGridTextColumn Header="LH Button #" IsReadOnly="False" Binding="{Binding Path=leftGripButtonNumber}"/>
                                </DataGrid.Columns>
                            </DataGrid>
                        </Grid>    
                    </TabItem>
                </TabControl>
            </TabItem>
            
            <TabItem Name="FeedbackTab" Header="Feedback">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <CheckBox Name="UseFeedbackCheckBox" Content="Use VRPN Feedback" Margin="2" Checked="UseFeedbackCheckBox_CheckChanged" Unchecked="UseFeedbackCheckBox_CheckChanged"/>
                    <GroupBox Name="FeedbackOptionsGroupBox" Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="2" Header="Feedback Tracker" IsEnabled="False">
                        <StackPanel Orientation="Vertical">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Margin="2" Text="Server Name:" VerticalAlignment="Center"/>
                                <TextBox Name="FeedbackServerNameTextBox" Margin="2" Width="500" TextChanged="FeedbackServerNameTextBox_TextChanged"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Margin="2" Text="Sensor Number:" VerticalAlignment="Center"/>
                                <TextBox Name="FeedbackSensorNumberTextBox" Margin="2" Width="72" PreviewKeyDown="intNumberTextBox_PreviewKeyDown" TextChanged="FeedbackSensorNumberTextBox_TextChanged"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Margin="2" Text="Joint Type:" VerticalAlignment="Center"/>
                                <ComboBox Name="FeedbackJointTypeComboBox" Width="120" SelectionChanged="FeedbackJointTypeComboBox_SelectionChanged">
                                    <ComboBoxItem Content="Hip Center"/>
                                    <ComboBoxItem Content="Spine"/>
                                    <ComboBoxItem Content="Shoulder Center"/>
                                    <ComboBoxItem Content="Head"/>
                                    <ComboBoxItem Content="Left Shoulder"/>
                                    <ComboBoxItem Content="Left Elbow"/>
                                    <ComboBoxItem Content="Left Wrist"/>
                                    <ComboBoxItem Content="Left Hand"/>
                                    <ComboBoxItem Content="Right Shoulder"/>
                                    <ComboBoxItem Content="Right Elbow"/>
                                    <ComboBoxItem Content="Right Wrist"/>
                                    <ComboBoxItem Content="Right Hand"/>
                                    <ComboBoxItem Content="Left Hip"/>
                                    <ComboBoxItem Content="Left Knee"/>
                                    <ComboBoxItem Content="Left Ankle"/>
                                    <ComboBoxItem Content="Left Foot"/>
                                    <ComboBoxItem Content="Right Hip"/>
                                    <ComboBoxItem Content="Right Knee"/>
                                    <ComboBoxItem Content="Right Ankle"/>
                                    <ComboBoxItem Content="Right Foot"/>                                    
                                </ComboBox>
                            </StackPanel>
                        </StackPanel>
                    </GroupBox>
                </Grid>
            </TabItem>
            
            <TabItem Name="ServersTab" Header="Servers">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <TextBlock Text="Configured Servers" FontWeight="Bold" FontSize="14" Margin="2"/>
                    <DataGrid Name="ServersDataGrid" Grid.Row="1" AutoGenerateColumns="False" HeadersVisibility="Column" ItemsSource="{Binding}" IsReadOnly="True">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Server Name" Binding="{Binding ServerName}"/>
                            <DataGridCheckBoxColumn Header="Analog"  Binding="{Binding AnalogServer}"/>
                            <DataGridTextColumn Header="Analog Channels" Binding="{Binding AnalogChannelsString}"/>
                            <DataGridCheckBoxColumn Header="Button" Binding="{Binding ButtonServer}"/>
                            <DataGridTextColumn Header="Button Channels" Binding="{Binding ButtonChannelsString}"/>
                            <DataGridCheckBoxColumn Header="Image" Binding="{Binding ImageServer}"/>
                            <DataGridCheckBoxColumn Header="Text" Binding="{Binding TextServer}"/>
                            <DataGridCheckBoxColumn Header="Tracker" Binding="{Binding TrackerServer}"/>
                            <DataGridTextColumn Header="Tracker Channels" Binding="{Binding TrackerChannelsString}"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </TabItem>
            
            <TabItem Name="LogTab" Header="Log">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <ScrollViewer Name="LogScrollViewer" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
                        <TextBox Name="LogTextBox" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" TextWrapping="Wrap" VerticalScrollBarVisibility="Disabled" AcceptsReturn="True"
                             Text="Welcome to the Kinect With VR (KVR) Server!"
                             IsReadOnly="True" IsReadOnlyCaretVisible="True" />
                    </ScrollViewer>
                    <CheckBox Name="verboseOutputCheckbox" Grid.Row="1" HorizontalAlignment="Right" Content="Verbose Output" IsChecked="False" Margin="2" Click="verboseOutputCheckbox_Click"/>
                </Grid>
            </TabItem>
        </TabControl>
        
        <StatusBar Grid.Row="3">
            <StatusBarItem>
                <TextBlock x:Name="KinectStatusBlock" Text="0"/>
            </StatusBarItem>
            <StatusBarItem Name="KinectStatusItem" Content="Kinects Attached"/>
            <StatusBarItem Content=" "/><!--Used to keep the status bar height set correctly-->
            <StatusBarItem x:Name="ServerStatusItem" Content="Server Stopped" HorizontalAlignment="Right"/>
        </StatusBar>
    </Grid>   
</Window>
